version: '3.8'

services:
  # MariaDB Database
  db:
    image: mariadb:10.11
    container_name: yarn_inventory_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: yarn_inventory_db
      MYSQL_USER: yarn_user
      MYSQL_PASSWORD: yarn_pass
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - yarn_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Node.js Backend API
  backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    container_name: yarn_inventory_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: password
      DB_NAME: yarn_inventory_db
      DB_PORT: 3306
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - yarn_network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Vue.js Frontend
  frontend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend
    container_name: yarn_inventory_frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - yarn_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development: Uncomment for hot-reloading during development
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: yarn_inventory_frontend_dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - yarn_network

volumes:
  db_data:
    driver: local

networks:
  yarn_network:
    driver: bridge